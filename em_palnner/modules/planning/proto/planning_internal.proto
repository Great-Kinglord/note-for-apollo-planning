syntax = "proto2";

package apollo.planning_internal;

import "modules/common/proto/header.proto";
import "modules/canbus/proto/chassis.proto";
import "modules/common/proto/pnc_point.proto";
import "modules/localization/proto/localization.proto";
import "modules/routing/proto/routing.proto";

message Debug {
  optional PlanningData planning_data = 2;
}

message SpeedPlan {
  optional string name = 1;
  repeated apollo.common.SpeedPoint speed_point = 2;
}

message StGraphBoundaryDebug {
  enum StBoundaryType {
    ST_BOUNDARY_TYPE_UNKNOWN = 1;
    ST_BOUNDARY_TYPE_STOP = 2;
    ST_BOUNDARY_TYPE_FOLLOW = 3;
    ST_BOUNDARY_TYPE_YIELD = 4;
    ST_BOUNDARY_TYPE_OVERTAKE = 5;
  }
  optional string name = 1;
  repeated apollo.common.SpeedPoint point = 2;
  optional StBoundaryType type = 3;
}

message SLFrameDebug {
  optional string name = 1;
  repeated double sampled_s = 2;
  repeated double static_obstacle_lower_bound = 3;
  repeated double dynamic_obstacle_lower_bound = 4;
  repeated double static_obstacle_upper_bound = 5;
  repeated double dynamic_obstacle_upper_bound = 6;
  repeated double map_lower_bound = 7;
  repeated double map_upper_bound = 8;
  repeated apollo.common.SLPoint sl_path = 9;
  repeated double aggregated_boundary_s = 10;
  repeated double aggregated_boundary_low = 11;
  repeated double aggregated_boundary_high = 12;
}

message STGraphDebug {
  message STGraphSpeedConstraint {
    repeated double t = 1;
    repeated double lower_bound = 2;
    repeated double upper_bound = 3;
  }
  message STGraphKernelCuiseRef {
    repeated double t = 1;
    repeated double cruise_line_s = 2;
  }
  message STGraphKernelFollowRef {
    repeated double t = 1;
    repeated double follow_line_s = 2;
  }

  optional string name = 1;
  repeated StGraphBoundaryDebug boundary = 2;
  repeated apollo.common.SpeedPoint speed_limit = 3;
  repeated apollo.common.SpeedPoint speed_profile = 4;
  repeated STGraphSpeedConstraint speed_constraint = 5;
  optional STGraphKernelCuiseRef kernel_cruise_ref = 6;
  optional STGraphKernelFollowRef kernel_follow_ref = 7;
}

// next id: 17
message PlanningData {
  // input
  optional apollo.localization.LocalizationEstimate adc_position = 7;
  optional apollo.canbus.Chassis chassis = 8;
  optional apollo.routing.RoutingResponse routing = 9;
  optional apollo.common.TrajectoryPoint init_point = 10;

  repeated apollo.common.Path path = 6;
  repeated SpeedPlan speed_plan = 13;
  repeated STGraphDebug st_graph = 14;
  repeated SLFrameDebug sl_frame = 15;

  optional apollo.common.Header prediction_header = 16;
}
